{"ast":null,"code":"import axios from 'axios';\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:4000',\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  withCredentials: true // 쿠키를 포함하기 위해 필요\n});\n\n// 요청 인터셉터 추가\napiClient.interceptors.request.use(config => {\n  console.log('Request:', {\n    url: config.url,\n    method: config.method,\n    data: config.data,\n    headers: config.headers\n  });\n  const token = localStorage.getItem('token');\n  if (token && config.headers) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// 응답 인터셉터 추가\napiClient.interceptors.response.use(response => {\n  console.log('Response:', {\n    status: response.status,\n    data: response.data,\n    headers: response.headers\n  });\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('Response Error:', {\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data,\n    message: error.message\n  });\n  return Promise.reject(error);\n});\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_URL","headers","withCredentials","interceptors","request","use","config","console","log","url","method","data","token","localStorage","getItem","Authorization","error","Promise","reject","response","status","_error$response","_error$response2","message"],"sources":["/Users/nasanha/comaday/front/src/api/apiClient.tsx"],"sourcesContent":["import axios from 'axios';\n\nconst apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:4000',\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  withCredentials: true, // 쿠키를 포함하기 위해 필요\n});\n\n// 요청 인터셉터 추가\napiClient.interceptors.request.use(\n  (config) => {\n    console.log('Request:', {\n      url: config.url,\n      method: config.method,\n      data: config.data,\n      headers: config.headers\n    });\n    const token = localStorage.getItem('token');\n    if (token && config.headers) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// 응답 인터셉터 추가\napiClient.interceptors.response.use(\n  (response) => {\n    console.log('Response:', {\n      status: response.status,\n      data: response.data,\n      headers: response.headers\n    });\n    return response;\n  },\n  (error) => {\n    console.error('Response Error:', {\n      status: error.response?.status,\n      data: error.response?.data,\n      message: error.message\n    });\n    return Promise.reject(error);\n  }\n);\n\nexport default apiClient; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,SAAS,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC7BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB,CAAC;EACDC,eAAe,EAAE,IAAI,CAAE;AACzB,CAAC,CAAC;;AAEF;AACAP,SAAS,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACVC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAE;IACtBC,GAAG,EAAEH,MAAM,CAACG,GAAG;IACfC,MAAM,EAAEJ,MAAM,CAACI,MAAM;IACrBC,IAAI,EAAEL,MAAM,CAACK,IAAI;IACjBV,OAAO,EAAEK,MAAM,CAACL;EAClB,CAAC,CAAC;EACF,MAAMW,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,IAAIN,MAAM,CAACL,OAAO,EAAE;IAC3BK,MAAM,CAACL,OAAO,CAACc,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAON,MAAM;AACf,CAAC,EACAU,KAAK,IAAK;EACT,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACArB,SAAS,CAACQ,YAAY,CAACgB,QAAQ,CAACd,GAAG,CAChCc,QAAQ,IAAK;EACZZ,OAAO,CAACC,GAAG,CAAC,WAAW,EAAE;IACvBY,MAAM,EAAED,QAAQ,CAACC,MAAM;IACvBT,IAAI,EAAEQ,QAAQ,CAACR,IAAI;IACnBV,OAAO,EAAEkB,QAAQ,CAAClB;EACpB,CAAC,CAAC;EACF,OAAOkB,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,eAAA,EAAAC,gBAAA;EACTf,OAAO,CAACS,KAAK,CAAC,iBAAiB,EAAE;IAC/BI,MAAM,GAAAC,eAAA,GAAEL,KAAK,CAACG,QAAQ,cAAAE,eAAA,uBAAdA,eAAA,CAAgBD,MAAM;IAC9BT,IAAI,GAAAW,gBAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,gBAAA,uBAAdA,gBAAA,CAAgBX,IAAI;IAC1BY,OAAO,EAAEP,KAAK,CAACO;EACjB,CAAC,CAAC;EACF,OAAON,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}