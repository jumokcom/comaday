{"ast":null,"code":"var _jsxFileName = \"/Users/nasanha/comaday/front/src/App.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$();\nimport React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport { userService } from './api/services/userService';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\n/**e\n * @fileoverview 코마데이(ComaDay) - 실시간 코인 전송 및 랭킹 관리 시스템\n * \n * 백엔드 개발자를 위한 가이드:\n * 1. API 엔드포인트 구현 필요사항:\n *    - POST /api/auth/login: 사용자 로그인\n *    - GET /api/users: 전체 사용자 목록 조회\n *    - GET /api/users/{id}: 특정 사용자 정보 조회\n *    - POST /api/transactions: 코인 전송\n *    - GET /api/transactions: 거래 내역 조회\n * \n * 2. 실시간 업데이트 필요사항:\n *    - WebSocket 연결 필요 (/ws/transactions)\n *    - 실시간 코인 전송 시 전체 사용자에게 알림\n *    - 랭킹 변동 시 실시간 업데이트\n * \n * 3. 데이터 유효성 검사:\n *    - 코인 전송 시 잔액 확인\n *    - 중복 전송 방지\n *    - 동시성 제어\n */\n\n// Types\n/**\n * @interface User\n * @description 사용자 정보 인터페이스\n * @property {number} id - 사용자 고유 식별자\n * @property {string} username - 사용자 아이디\n * @property {number} coinCount - 보유 코인 수량\n * @property {boolean} isGuest - 게스트 여부\n * @property {string} lastLoginAt - 마지막 로그인 시간\n * \n * @example\n * // API Response 예시\n * {\n *   \"id\": 1,\n *   \"username\": \"고재우, 나산하\",\n *   \"coinCount\": 100,\n *   \"isGuest\": false,\n *   \"lastLoginAt\": \"2023-04-01T12:00:00\"\n * }\n */\n\n/**\n * @interface MessageContextType\n * @description 메시지 표시 컨텍스트\n * @note 백엔드에서 에러 응답 시 message 필드를 포함해야 함\n */\n\n/**\n * @interface UserContextType\n * @description 사용자 관리 컨텍스트\n * @note 백엔드 API와 연동 시 이 인터페이스의 메서드들이 API 호출을 수행\n */\n\n/**\n * @interface CoinTransferEvent\n * @description 코인 전송 이벤트 데이터 구조\n * @note WebSocket 이벤트 타입으로 사용됨\n * \n * @example\n * // WebSocket 메시지 예시\n * {\n *   \"type\": \"COIN_TRANSFER\",\n *   \"data\": {\n *     \"fromUser\": { \"id\": 1, \"name\": \"고재우, 나산하\", \"coin\": 90 },\n *     \"toUser\": { \"id\": 2, \"name\": \"김연지, 김채민\", \"coin\": 110 },\n *     \"amount\": 10\n *   }\n * }\n */\n\n/**\n * @interface Result\n * @description API 응답 결과 인터페이스\n * @template T - 응답 데이터 타입\n * \n * @example\n * // API 응답 예시\n * {\n *   \"success\": true,\n *   \"data\": { ... },\n *   \"message\": \"성공적으로 처리되었습니다.\"\n * }\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n/**\n * @const MOCK_USERS\n * @description 목업 사용자 데이터 (백엔드 API 구현 시 제거 예정)\n * @note GET /api/users 엔드포인트의 응답 형식과 동일\n */\nconst MOCK_USERS = [{\n  id: 1,\n  username: \"고재우, 나산하\",\n  coinCount: 100,\n  isGuest: false,\n  lastLoginAt: \"2023-04-01T12:00:00\"\n}, {\n  id: 2,\n  username: \"김연지, 김채민\",\n  coinCount: 100,\n  isGuest: false,\n  lastLoginAt: \"2023-04-01T12:00:00\"\n}, {\n  id: 3,\n  username: \"박지성, 이민재\",\n  coinCount: 100,\n  isGuest: false,\n  lastLoginAt: \"2023-04-01T12:00:00\"\n}];\n\n// Contexts\nconst MessageContext = /*#__PURE__*/createContext(null);\nconst UserContext = /*#__PURE__*/createContext(null);\n\n// Hooks\nconst useMessage = () => {\n  _s();\n  const context = useContext(MessageContext);\n  if (!context) throw new Error('useMessage must be used within a MessageProvider');\n  return context;\n};\n_s(useMessage, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) throw new Error('useUser must be used within a UserProvider');\n  return context;\n};\n\n// Components\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst MessageBox = () => {\n  _s3();\n  const {\n    message,\n    clearMessage\n  } = useMessage();\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(clearMessage, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [message, clearMessage]);\n  if (!message) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `message-box ${message.type}`,\n    children: message.text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 10\n  }, this);\n};\n_s3(MessageBox, \"D0m4HHriT1Rl9OLpVUway3gKiGc=\", false, function () {\n  return [useMessage];\n});\n_c = MessageBox;\nconst UserInfo = () => {\n  _s4();\n  const {\n    currentUser\n  } = useUser();\n  if (!currentUser) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-info-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-info-content\",\n      children: [\"\\uBC88\\uD638: \", currentUser.id, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"separator\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 30\n      }, this), \" \", currentUser.username, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"separator\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 90\n      }, this), \" \\uCF54\\uC778: \", currentUser.coinCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s4(UserInfo, \"sSOnt5QhjnOpXbhgG8Rsm9OMyRg=\", false, function () {\n  return [useUser];\n});\n_c2 = UserInfo;\nconst RankingTable = () => {\n  _s5();\n  const {\n    users\n  } = useUser();\n  const sortedUsers = [...users].sort((a, b) => b.coinCount - a.coinCount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ranking-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"ranking-title\",\n      children: \"\\uB7AD\\uD0B9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"ranking-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC21C\\uC704\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uC774\\uB984\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\uCF54\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: sortedUsers.map((user, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.coinCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 15\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s5(RankingTable, \"A3bheA0v8PsOFuNrUS3GBm84t78=\", false, function () {\n  return [useUser];\n});\n_c3 = RankingTable;\nconst Login = () => {\n  _s6();\n  const {\n    login\n  } = useUser();\n  const {\n    showError\n  } = useMessage();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username || !password) {\n      showError('아이디와 비밀번호를 모두 입력하세요.');\n      return;\n    }\n    try {\n      const user = await userService.guestLogin(username, password);\n      login(user);\n    } catch (error) {\n      if (error instanceof Error) {\n        showError(error.message);\n      } else {\n        showError('알 수 없는 오류가 발생했습니다.');\n      }\n    }\n  };\n  const PasswordIcon = () => {\n    return showPassword ? /*#__PURE__*/_jsxDEV(FaEyeSlash, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(FaEye, {\n      size: 16\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 54\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"login-title\",\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"login-form\",\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\uC544\\uC774\\uB514\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          autoComplete: \"off\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password-input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"password\",\n            type: showPassword ? \"text\" : \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            autoComplete: \"new-password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"password-toggle-btn\",\n            onClick: () => setShowPassword(!showPassword),\n            children: /*#__PURE__*/_jsxDEV(PasswordIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 235,\n    columnNumber: 5\n  }, this);\n};\n_s6(Login, \"BTfEy2rkeX/xFTN87BK5bq0cYj0=\", false, function () {\n  return [useUser, useMessage];\n});\n_c4 = Login;\nconst CoinTransfer = ({\n  onClose\n}) => {\n  _s7();\n  const {\n    users,\n    currentUser,\n    sendCoin\n  } = useUser();\n  const {\n    showError,\n    showSuccess\n  } = useMessage();\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedUserId || !amount) {\n      showError('모든 필드를 입력해주세요.');\n      return;\n    }\n    const result = await sendCoin(Number(selectedUserId), Number(amount));\n    if (!result.success) {\n      showError(result.message || '코인 전송에 실패했습니다.');\n      return;\n    }\n    const toUser = users.find(u => u.id === Number(selectedUserId));\n    showSuccess(`${(toUser === null || toUser === void 0 ? void 0 : toUser.username) || '사용자'}님에게 ${amount}코인을 전송했습니다.`);\n    setAmount('');\n    setSelectedUserId('');\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"modal-overlay\",\n    onClick: onClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"coin-transfer-modal\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"coin-transfer-title\",\n        children: \"\\uCF54\\uC778 \\uC804\\uC1A1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin-transfer-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"receiver\",\n            children: \"\\uBC1B\\uB294 \\uC0AC\\uB78C:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"receiver\",\n            value: selectedUserId,\n            onChange: e => setSelectedUserId(e.target.value),\n            className: \"coin-transfer-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"\\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), users.filter(user => user.id !== (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id)).map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: user.id,\n              children: user.username\n            }, user.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin-transfer-form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"amount\",\n            children: \"\\uCF54\\uC778 \\uC218\\uB7C9:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"amount\",\n            type: \"number\",\n            value: amount,\n            onChange: e => setAmount(e.target.value),\n            min: \"1\",\n            className: \"coin-transfer-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"coin-transfer-button-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"coin-transfer-submit\",\n            children: \"\\uC804\\uC1A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: onClose,\n            className: \"coin-transfer-cancel\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n\n// Providers\n_s7(CoinTransfer, \"GZdivwP8bo00sX4cDHAHj7Nyqx4=\", false, function () {\n  return [useUser, useMessage];\n});\n_c5 = CoinTransfer;\nconst MessageProvider = ({\n  children\n}) => {\n  _s8();\n  const [message, setMessage] = useState(null);\n  const showError = text => {\n    setMessage({\n      text,\n      type: 'error'\n    });\n    setTimeout(() => setMessage(null), 3000);\n  };\n  const showSuccess = text => {\n    setMessage({\n      text,\n      type: 'success'\n    });\n    setTimeout(() => setMessage(null), 3000);\n  };\n  const clearMessage = () => setMessage(null);\n  return /*#__PURE__*/_jsxDEV(MessageContext.Provider, {\n    value: {\n      message,\n      showError,\n      showSuccess,\n      clearMessage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 360,\n    columnNumber: 5\n  }, this);\n};\n\n/**\n * @provider UserProvider\n * @description 사용자 관리 및 코인 전송 로직\n * @note 백엔드 API 연동 시 수정이 필요한 주요 부분\n */\n_s8(MessageProvider, \"oxT8SEz5FIjvFP5ix50Ku0sapH4=\");\n_c6 = MessageProvider;\nconst UserProvider = ({\n  children\n}) => {\n  _s9();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [users, setUsers] = useState([]);\n  const {\n    showError\n  } = useMessage();\n\n  /**\n   * @function login\n   * @description 사용자 로그인 처리\n   * @note POST /api/auth/login 엔드포인트로 대체 필요\n   */\n  const login = user => {\n    const found = users.find(u => u.id === user.id);\n    if (found) {\n      setCurrentUser(user);\n    } else {\n      setUsers(prev => [...prev, user]);\n      setCurrentUser(user);\n    }\n  };\n  const logout = () => setCurrentUser(null);\n\n  /**\n   * @function sendCoin\n   * @description 코인 전송 처리\n   * @note \n   * 1. POST /api/transactions 엔드포인트로 대체 필요\n   * 2. 트랜잭션 원자성 보장 필요\n   * 3. 동시성 제어 필요 (예: 낙관적 락)\n   * \n   * @example\n   * // API Request 예시\n   * POST /api/transactions\n   * {\n   *   \"toUserId\": 2,\n   *   \"amount\": 10\n   * }\n   */\n  const sendCoin = async (toUserId, amount) => {\n    if (!currentUser) {\n      return {\n        success: false,\n        message: '로그인이 필요합니다.'\n      };\n    }\n    const toUser = users.find(u => u.id === toUserId);\n    if (!toUser) {\n      return {\n        success: false,\n        message: '받는 사람을 찾을 수 없습니다.'\n      };\n    }\n    if (amount <= 0) {\n      return {\n        success: false,\n        message: '올바른 코인 수량을 입력해주세요.'\n      };\n    }\n    if (currentUser.coinCount < amount) {\n      return {\n        success: false,\n        message: '보유한 코인이 부족합니다.'\n      };\n    }\n\n    // 주의: 실제 구현 시 이 부분은 백엔드에서 트랜잭션으로 처리되어야 함\n    const updatedUsers = users.map(user => {\n      if (user.id === currentUser.id) return {\n        ...user,\n        coinCount: user.coinCount - amount\n      };\n      if (user.id === toUserId) return {\n        ...user,\n        coinCount: user.coinCount + amount\n      };\n      return user;\n    });\n    setUsers(updatedUsers);\n    const updatedCurrentUser = updatedUsers.find(u => u.id === currentUser.id);\n    setCurrentUser(updatedCurrentUser);\n    return {\n      success: true,\n      data: {\n        type: 'COIN_TRANSFER',\n        data: {\n          fromUser: updatedCurrentUser,\n          toUser: updatedUsers.find(u => u.id === toUserId),\n          amount\n        }\n      }\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      currentUser,\n      users,\n      login,\n      logout,\n      sendCoin\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 452,\n    columnNumber: 5\n  }, this);\n};\n\n// Main App Content\n_s9(UserProvider, \"WxhjOF1nPDyfViHwIagrS0w+l+Q=\", false, function () {\n  return [useMessage];\n});\n_c7 = UserProvider;\nconst AppContent = () => {\n  _s0();\n  const {\n    currentUser\n  } = useUser();\n  const [showTransfer, setShowTransfer] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MessageBox, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), !currentUser ? /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"app-title\",\n        children: \"\\uCF54\\uB9C8\\uB370\\uC774\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-section\",\n        children: /*#__PURE__*/_jsxDEV(UserInfo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(RankingTable, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"coin-transfer-btn\",\n          onClick: () => setShowTransfer(true),\n          children: \"\\uCF54\\uC778 \\uC804\\uC1A1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), showTransfer && /*#__PURE__*/_jsxDEV(CoinTransfer, {\n        onClose: () => setShowTransfer(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n};\n\n// Root App Component\n_s0(AppContent, \"nvIgOCF3Twg8L7IwXxSlwwS4A/o=\", false, function () {\n  return [useUser];\n});\n_c8 = AppContent;\nconst App = () => /*#__PURE__*/_jsxDEV(MessageProvider, {\n  children: /*#__PURE__*/_jsxDEV(UserProvider, {\n    children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 490,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 489,\n  columnNumber: 3\n}, this);\n_c9 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"MessageBox\");\n$RefreshReg$(_c2, \"UserInfo\");\n$RefreshReg$(_c3, \"RankingTable\");\n$RefreshReg$(_c4, \"Login\");\n$RefreshReg$(_c5, \"CoinTransfer\");\n$RefreshReg$(_c6, \"MessageProvider\");\n$RefreshReg$(_c7, \"UserProvider\");\n$RefreshReg$(_c8, \"AppContent\");\n$RefreshReg$(_c9, \"App\");","map":{"version":3,"names":["React","useState","useEffect","createContext","useContext","userService","FaEye","FaEyeSlash","jsxDEV","_jsxDEV","Fragment","_Fragment","MOCK_USERS","id","username","coinCount","isGuest","lastLoginAt","MessageContext","UserContext","useMessage","_s","context","Error","useUser","_s2","MessageBox","_s3","message","clearMessage","timer","setTimeout","clearTimeout","className","type","children","text","fileName","_jsxFileName","lineNumber","columnNumber","_c","UserInfo","_s4","currentUser","_c2","RankingTable","_s5","users","sortedUsers","sort","a","b","map","user","index","_c3","Login","_s6","login","showError","setUsername","password","setPassword","showPassword","setShowPassword","handleSubmit","e","preventDefault","guestLogin","error","PasswordIcon","size","onSubmit","autoComplete","htmlFor","value","onChange","target","onClick","_c4","CoinTransfer","onClose","_s7","sendCoin","showSuccess","selectedUserId","setSelectedUserId","amount","setAmount","result","Number","success","toUser","find","u","stopPropagation","filter","min","_c5","MessageProvider","_s8","setMessage","Provider","_c6","UserProvider","_s9","setCurrentUser","setUsers","found","prev","logout","toUserId","updatedUsers","updatedCurrentUser","data","fromUser","_c7","AppContent","_s0","showTransfer","setShowTransfer","_c8","App","_c9","$RefreshReg$"],"sources":["/Users/nasanha/comaday/front/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\nimport './App.css';\nimport { userService } from './api/services/userService';\nimport { User } from './types/user';\nimport { FaEye, FaEyeSlash } from 'react-icons/fa';\n\n/**e\n * @fileoverview 코마데이(ComaDay) - 실시간 코인 전송 및 랭킹 관리 시스템\n * \n * 백엔드 개발자를 위한 가이드:\n * 1. API 엔드포인트 구현 필요사항:\n *    - POST /api/auth/login: 사용자 로그인\n *    - GET /api/users: 전체 사용자 목록 조회\n *    - GET /api/users/{id}: 특정 사용자 정보 조회\n *    - POST /api/transactions: 코인 전송\n *    - GET /api/transactions: 거래 내역 조회\n * \n * 2. 실시간 업데이트 필요사항:\n *    - WebSocket 연결 필요 (/ws/transactions)\n *    - 실시간 코인 전송 시 전체 사용자에게 알림\n *    - 랭킹 변동 시 실시간 업데이트\n * \n * 3. 데이터 유효성 검사:\n *    - 코인 전송 시 잔액 확인\n *    - 중복 전송 방지\n *    - 동시성 제어\n */\n\n// Types\n/**\n * @interface User\n * @description 사용자 정보 인터페이스\n * @property {number} id - 사용자 고유 식별자\n * @property {string} username - 사용자 아이디\n * @property {number} coinCount - 보유 코인 수량\n * @property {boolean} isGuest - 게스트 여부\n * @property {string} lastLoginAt - 마지막 로그인 시간\n * \n * @example\n * // API Response 예시\n * {\n *   \"id\": 1,\n *   \"username\": \"고재우, 나산하\",\n *   \"coinCount\": 100,\n *   \"isGuest\": false,\n *   \"lastLoginAt\": \"2023-04-01T12:00:00\"\n * }\n */\n\n/**\n * @interface MessageContextType\n * @description 메시지 표시 컨텍스트\n * @note 백엔드에서 에러 응답 시 message 필드를 포함해야 함\n */\ninterface MessageContextType {\n  message: { text: string; type: 'error' | 'success' } | null;\n  showError: (text: string) => void;\n  showSuccess: (text: string) => void;\n  clearMessage: () => void;\n}\n\n/**\n * @interface UserContextType\n * @description 사용자 관리 컨텍스트\n * @note 백엔드 API와 연동 시 이 인터페이스의 메서드들이 API 호출을 수행\n */\ninterface UserContextType {\n  currentUser: User | null;\n  users: User[];\n  login: (user: User) => void;\n  logout: () => void;\n  sendCoin: (toUserId: number, amount: number) => Promise<Result<CoinTransferEvent>>;\n}\n\n/**\n * @interface CoinTransferEvent\n * @description 코인 전송 이벤트 데이터 구조\n * @note WebSocket 이벤트 타입으로 사용됨\n * \n * @example\n * // WebSocket 메시지 예시\n * {\n *   \"type\": \"COIN_TRANSFER\",\n *   \"data\": {\n *     \"fromUser\": { \"id\": 1, \"name\": \"고재우, 나산하\", \"coin\": 90 },\n *     \"toUser\": { \"id\": 2, \"name\": \"김연지, 김채민\", \"coin\": 110 },\n *     \"amount\": 10\n *   }\n * }\n */\ninterface CoinTransferEvent {\n  type: 'COIN_TRANSFER';\n  data: {\n    fromUser: User;\n    toUser: User;\n    amount: number;\n  };\n}\n\n/**\n * @interface Result\n * @description API 응답 결과 인터페이스\n * @template T - 응답 데이터 타입\n * \n * @example\n * // API 응답 예시\n * {\n *   \"success\": true,\n *   \"data\": { ... },\n *   \"message\": \"성공적으로 처리되었습니다.\"\n * }\n */\ninterface Result<T> {\n  success: boolean;\n  data?: T;\n  message?: string;\n}\n\n/**\n * @const MOCK_USERS\n * @description 목업 사용자 데이터 (백엔드 API 구현 시 제거 예정)\n * @note GET /api/users 엔드포인트의 응답 형식과 동일\n */\nconst MOCK_USERS: User[] = [\n  { id: 1, username: \"고재우, 나산하\", coinCount: 100, isGuest: false, lastLoginAt: \"2023-04-01T12:00:00\" },\n  { id: 2, username: \"김연지, 김채민\", coinCount: 100, isGuest: false, lastLoginAt: \"2023-04-01T12:00:00\" },\n  { id: 3, username: \"박지성, 이민재\", coinCount: 100, isGuest: false, lastLoginAt: \"2023-04-01T12:00:00\" },\n];\n\n// Contexts\nconst MessageContext = createContext<MessageContextType | null>(null);\nconst UserContext = createContext<UserContextType | null>(null);\n\n// Hooks\nconst useMessage = () => {\n  const context = useContext(MessageContext);\n  if (!context) throw new Error('useMessage must be used within a MessageProvider');\n  return context;\n};\n\nconst useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) throw new Error('useUser must be used within a UserProvider');\n  return context;\n};\n\n// Components\nconst MessageBox = () => {\n  const { message, clearMessage } = useMessage();\n\n  useEffect(() => {\n    if (message) {\n      const timer = setTimeout(clearMessage, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [message, clearMessage]);\n\n  if (!message) return null;\n  return <div className={`message-box ${message.type}`}>{message.text}</div>;\n};\n\nconst UserInfo = () => {\n  const { currentUser } = useUser();\n  if (!currentUser) return null;\n\n  return (\n    <div className=\"user-info-box\">\n      <div className=\"user-info-content\">\n        번호: {currentUser.id} <span className=\"separator\">|</span> {currentUser.username} <span className=\"separator\">|</span> 코인: {currentUser.coinCount}\n      </div>\n    </div>\n  );\n};\n\nconst RankingTable = () => {\n  const { users } = useUser();\n  const sortedUsers = [...users].sort((a, b) => b.coinCount - a.coinCount);\n\n  return (\n    <div className=\"ranking-container\">\n      <h2 className=\"ranking-title\">랭킹</h2>\n      <table className=\"ranking-table\">\n        <thead>\n          <tr>\n            <th>순위</th>\n            <th>이름</th>\n            <th>코인</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedUsers.map((user, index) => (\n            <tr key={user.id}>\n              <td>{index + 1}</td>\n              <td>{user.username}</td>\n              <td>{user.coinCount}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst Login = () => {\n  const { login } = useUser();\n  const { showError } = useMessage();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!username || !password) {\n      showError('아이디와 비밀번호를 모두 입력하세요.');\n      return;\n    }\n    \n    try {\n      const user = await userService.guestLogin(username, password);\n      login(user);\n    } catch (error) {\n      if (error instanceof Error) {\n        showError(error.message);\n      } else {\n        showError('알 수 없는 오류가 발생했습니다.');\n      }\n    }\n  };\n\n  const PasswordIcon = () => {\n    return showPassword ? <FaEyeSlash size={16} /> : <FaEye size={16} />;\n  };\n\n  return (\n    <div className=\"login-modal\">\n      <h2 className=\"login-title\">로그인</h2>\n      <form onSubmit={handleSubmit} className=\"login-form\" autoComplete=\"off\">\n        <div className=\"login-input-row\">\n          <label htmlFor=\"username\">아이디</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            value={username}\n            onChange={e => setUsername(e.target.value)}\n            autoComplete=\"off\"\n          />\n        </div>\n        <div className=\"login-input-row\">\n          <label htmlFor=\"password\">비밀번호</label>\n          <div className=\"password-input-container\">\n            <input\n              id=\"password\"\n              type={showPassword ? \"text\" : \"password\"}\n              value={password}\n              onChange={e => setPassword(e.target.value)}\n              autoComplete=\"new-password\"\n            />\n            <button\n              type=\"button\"\n              className=\"password-toggle-btn\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              <PasswordIcon />\n            </button>\n          </div>\n        </div>\n        <button type=\"submit\">로그인</button>\n      </form>\n    </div>\n  );\n};\n\nconst CoinTransfer = ({ onClose }: { onClose: () => void }) => {\n  const { users, currentUser, sendCoin } = useUser();\n  const { showError, showSuccess } = useMessage();\n  const [selectedUserId, setSelectedUserId] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    if (!selectedUserId || !amount) {\n      showError('모든 필드를 입력해주세요.');\n      return;\n    }\n    \n    const result = await sendCoin(Number(selectedUserId), Number(amount));\n    if (!result.success) {\n      showError(result.message || '코인 전송에 실패했습니다.');\n      return;\n    }\n    \n    const toUser = users.find(u => u.id === Number(selectedUserId));\n    showSuccess(`${toUser?.username || '사용자'}님에게 ${amount}코인을 전송했습니다.`);\n    setAmount('');\n    setSelectedUserId('');\n    onClose();\n  };\n\n  return (\n    <div className=\"modal-overlay\" onClick={onClose}>\n      <div className=\"coin-transfer-modal\" onClick={e => e.stopPropagation()}>\n        <h2 className=\"coin-transfer-title\">코인 전송</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"coin-transfer-form-group\">\n            <label htmlFor=\"receiver\">받는 사람:</label>\n            <select\n              id=\"receiver\"\n              value={selectedUserId}\n              onChange={e => setSelectedUserId(e.target.value)}\n              className=\"coin-transfer-select\"\n            >\n              <option value=\"\">선택하세요</option>\n              {users\n                .filter(user => user.id !== currentUser?.id)\n                .map(user => (\n                  <option key={user.id} value={user.id}>\n                    {user.username}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"coin-transfer-form-group\">\n            <label htmlFor=\"amount\">코인 수량:</label>\n            <input\n              id=\"amount\"\n              type=\"number\"\n              value={amount}\n              onChange={e => setAmount(e.target.value)}\n              min=\"1\"\n              className=\"coin-transfer-input\"\n            />\n          </div>\n          <div className=\"coin-transfer-button-group\">\n            <button type=\"submit\" className=\"coin-transfer-submit\">전송</button>\n            <button type=\"button\" onClick={onClose} className=\"coin-transfer-cancel\">취소</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\n// Providers\nconst MessageProvider = ({ children }: { children: React.ReactNode }) => {\n  const [message, setMessage] = useState<{ text: string; type: 'error' | 'success' } | null>(null);\n\n  const showError = (text: string) => {\n    setMessage({ text, type: 'error' });\n    setTimeout(() => setMessage(null), 3000);\n  };\n\n  const showSuccess = (text: string) => {\n    setMessage({ text, type: 'success' });\n    setTimeout(() => setMessage(null), 3000);\n  };\n\n  const clearMessage = () => setMessage(null);\n\n  return (\n    <MessageContext.Provider value={{ message, showError, showSuccess, clearMessage }}>\n      {children}\n    </MessageContext.Provider>\n  );\n};\n\n/**\n * @provider UserProvider\n * @description 사용자 관리 및 코인 전송 로직\n * @note 백엔드 API 연동 시 수정이 필요한 주요 부분\n */\nconst UserProvider = ({ children }: { children: React.ReactNode }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [users, setUsers] = useState<User[]>([]);\n  const { showError } = useMessage();\n\n  /**\n   * @function login\n   * @description 사용자 로그인 처리\n   * @note POST /api/auth/login 엔드포인트로 대체 필요\n   */\n  const login = (user: User) => {\n    const found = users.find(u => u.id === user.id);\n    if (found) {\n      setCurrentUser(user);\n    } else {\n      setUsers(prev => [...prev, user]);\n      setCurrentUser(user);\n    }\n  };\n\n  const logout = () => setCurrentUser(null);\n\n  /**\n   * @function sendCoin\n   * @description 코인 전송 처리\n   * @note \n   * 1. POST /api/transactions 엔드포인트로 대체 필요\n   * 2. 트랜잭션 원자성 보장 필요\n   * 3. 동시성 제어 필요 (예: 낙관적 락)\n   * \n   * @example\n   * // API Request 예시\n   * POST /api/transactions\n   * {\n   *   \"toUserId\": 2,\n   *   \"amount\": 10\n   * }\n   */\n  const sendCoin = async (toUserId: number, amount: number): Promise<Result<CoinTransferEvent>> => {\n    if (!currentUser) {\n      return { success: false, message: '로그인이 필요합니다.' };\n    }\n\n    const toUser = users.find(u => u.id === toUserId);\n    if (!toUser) {\n      return { success: false, message: '받는 사람을 찾을 수 없습니다.' };\n    }\n\n    if (amount <= 0) {\n      return { success: false, message: '올바른 코인 수량을 입력해주세요.' };\n    }\n\n    if (currentUser.coinCount < amount) {\n      return { success: false, message: '보유한 코인이 부족합니다.' };\n    }\n\n    // 주의: 실제 구현 시 이 부분은 백엔드에서 트랜잭션으로 처리되어야 함\n    const updatedUsers = users.map(user => {\n      if (user.id === currentUser.id) return { ...user, coinCount: user.coinCount - amount };\n      if (user.id === toUserId) return { ...user, coinCount: user.coinCount + amount };\n      return user;\n    });\n\n    setUsers(updatedUsers);\n    const updatedCurrentUser = updatedUsers.find(u => u.id === currentUser.id)!;\n    setCurrentUser(updatedCurrentUser);\n\n    return {\n      success: true,\n      data: {\n        type: 'COIN_TRANSFER',\n        data: {\n          fromUser: updatedCurrentUser,\n          toUser: updatedUsers.find(u => u.id === toUserId)!,\n          amount\n        }\n      }\n    };\n  };\n\n  return (\n    <UserContext.Provider value={{ currentUser, users, login, logout, sendCoin }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\n// Main App Content\nconst AppContent = () => {\n  const { currentUser } = useUser();\n  const [showTransfer, setShowTransfer] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <MessageBox />\n      {!currentUser ? (\n        <Login />\n      ) : (\n        <>\n          <h1 className=\"app-title\">코마데이</h1>\n          <div className=\"user-section\">\n            <UserInfo />\n          </div>\n          <RankingTable />\n          <div className=\"action-section\">\n            <button className=\"coin-transfer-btn\" onClick={() => setShowTransfer(true)}>\n              코인 전송\n            </button>\n          </div>\n          {showTransfer && <CoinTransfer onClose={() => setShowTransfer(false)} />}\n        </>\n      )}\n    </div>\n  );\n};\n\n// Root App Component\nconst App = () => (\n  <MessageProvider>\n    <UserProvider>\n      <AppContent />\n    </UserProvider>\n  </MessageProvider>\n);\n\nexport default App;"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAC7E,OAAO,WAAW;AAClB,SAASC,WAAW,QAAQ,4BAA4B;AAExD,SAASC,KAAK,EAAEC,UAAU,QAAQ,gBAAgB;;AAElD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAQA;AACA;AACA;AACA;AACA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAmBA;AACA;AACA;AACA;AACA;AACA,MAAMC,UAAkB,GAAG,CACzB;EAAEC,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,UAAU;EAAEC,SAAS,EAAE,GAAG;EAAEC,OAAO,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAsB,CAAC,EACnG;EAAEJ,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,UAAU;EAAEC,SAAS,EAAE,GAAG;EAAEC,OAAO,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAsB,CAAC,EACnG;EAAEJ,EAAE,EAAE,CAAC;EAAEC,QAAQ,EAAE,UAAU;EAAEC,SAAS,EAAE,GAAG;EAAEC,OAAO,EAAE,KAAK;EAAEC,WAAW,EAAE;AAAsB,CAAC,CACpG;;AAED;AACA,MAAMC,cAAc,gBAAGf,aAAa,CAA4B,IAAI,CAAC;AACrE,MAAMgB,WAAW,gBAAGhB,aAAa,CAAyB,IAAI,CAAC;;AAE/D;AACA,MAAMiB,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,OAAO,GAAGlB,UAAU,CAACc,cAAc,CAAC;EAC1C,IAAI,CAACI,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,kDAAkD,CAAC;EACjF,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CAJID,UAAU;AAMhB,MAAMI,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAMH,OAAO,GAAGlB,UAAU,CAACe,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE,MAAM,IAAIC,KAAK,CAAC,4CAA4C,CAAC;EAC3E,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAG,GAAA,CANMD,OAAO;AAOb,MAAME,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvB,MAAM;IAAEC,OAAO;IAAEC;EAAa,CAAC,GAAGT,UAAU,CAAC,CAAC;EAE9ClB,SAAS,CAAC,MAAM;IACd,IAAI0B,OAAO,EAAE;MACX,MAAME,KAAK,GAAGC,UAAU,CAACF,YAAY,EAAE,IAAI,CAAC;MAC5C,OAAO,MAAMG,YAAY,CAACF,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACF,OAAO,EAAEC,YAAY,CAAC,CAAC;EAE3B,IAAI,CAACD,OAAO,EAAE,OAAO,IAAI;EACzB,oBAAOnB,OAAA;IAAKwB,SAAS,EAAE,eAAeL,OAAO,CAACM,IAAI,EAAG;IAAAC,QAAA,EAAEP,OAAO,CAACQ;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5E,CAAC;AAACb,GAAA,CAZID,UAAU;EAAA,QACoBN,UAAU;AAAA;AAAAqB,EAAA,GADxCf,UAAU;AAchB,MAAMgB,QAAQ,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACrB,MAAM;IAAEC;EAAY,CAAC,GAAGpB,OAAO,CAAC,CAAC;EACjC,IAAI,CAACoB,WAAW,EAAE,OAAO,IAAI;EAE7B,oBACEnC,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAAE,QAAA,eAC5B1B,OAAA;MAAKwB,SAAS,EAAC,mBAAmB;MAAAE,QAAA,GAAC,gBAC7B,EAACS,WAAW,CAAC/B,EAAE,EAAC,GAAC,eAAAJ,OAAA;QAAMwB,SAAS,EAAC,WAAW;QAAAE,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,KAAC,EAACI,WAAW,CAAC9B,QAAQ,EAAC,GAAC,eAAAL,OAAA;QAAMwB,SAAS,EAAC,WAAW;QAAAE,QAAA,EAAC;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,mBAAK,EAACI,WAAW,CAAC7B,SAAS;IAAA;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7I;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,GAAA,CAXID,QAAQ;EAAA,QACYlB,OAAO;AAAA;AAAAqB,GAAA,GAD3BH,QAAQ;AAad,MAAMI,YAAY,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAM;IAAEC;EAAM,CAAC,GAAGxB,OAAO,CAAC,CAAC;EAC3B,MAAMyB,WAAW,GAAG,CAAC,GAAGD,KAAK,CAAC,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACrC,SAAS,GAAGoC,CAAC,CAACpC,SAAS,CAAC;EAExE,oBACEN,OAAA;IAAKwB,SAAS,EAAC,mBAAmB;IAAAE,QAAA,gBAChC1B,OAAA;MAAIwB,SAAS,EAAC,eAAe;MAAAE,QAAA,EAAC;IAAE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrC/B,OAAA;MAAOwB,SAAS,EAAC,eAAe;MAAAE,QAAA,gBAC9B1B,OAAA;QAAA0B,QAAA,eACE1B,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAA0B,QAAA,EAAI;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACX/B,OAAA;YAAA0B,QAAA,EAAI;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACX/B,OAAA;YAAA0B,QAAA,EAAI;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR/B,OAAA;QAAA0B,QAAA,EACGc,WAAW,CAACI,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3B9C,OAAA;UAAA0B,QAAA,gBACE1B,OAAA;YAAA0B,QAAA,EAAKoB,KAAK,GAAG;UAAC;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpB/B,OAAA;YAAA0B,QAAA,EAAKmB,IAAI,CAACxC;UAAQ;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxB/B,OAAA;YAAA0B,QAAA,EAAKmB,IAAI,CAACvC;UAAS;YAAAsB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHlBc,IAAI,CAACzC,EAAE;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACO,GAAA,CA3BID,YAAY;EAAA,QACEtB,OAAO;AAAA;AAAAgC,GAAA,GADrBV,YAAY;AA6BlB,MAAMW,KAAK,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClB,MAAM;IAAEC;EAAM,CAAC,GAAGnC,OAAO,CAAC,CAAC;EAC3B,MAAM;IAAEoC;EAAU,CAAC,GAAGxC,UAAU,CAAC,CAAC;EAClC,MAAM,CAACN,QAAQ,EAAE+C,WAAW,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC6D,QAAQ,EAAEC,WAAW,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC+D,YAAY,EAAEC,eAAe,CAAC,GAAGhE,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMiE,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACtD,QAAQ,IAAI,CAACgD,QAAQ,EAAE;MAC1BF,SAAS,CAAC,sBAAsB,CAAC;MACjC;IACF;IAEA,IAAI;MACF,MAAMN,IAAI,GAAG,MAAMjD,WAAW,CAACgE,UAAU,CAACvD,QAAQ,EAAEgD,QAAQ,CAAC;MAC7DH,KAAK,CAACL,IAAI,CAAC;IACb,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACd,IAAIA,KAAK,YAAY/C,KAAK,EAAE;QAC1BqC,SAAS,CAACU,KAAK,CAAC1C,OAAO,CAAC;MAC1B,CAAC,MAAM;QACLgC,SAAS,CAAC,oBAAoB,CAAC;MACjC;IACF;EACF,CAAC;EAED,MAAMW,YAAY,GAAGA,CAAA,KAAM;IACzB,OAAOP,YAAY,gBAAGvD,OAAA,CAACF,UAAU;MAACiE,IAAI,EAAE;IAAG;MAAAnC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAAG/B,OAAA,CAACH,KAAK;MAACkE,IAAI,EAAE;IAAG;MAAAnC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtE,CAAC;EAED,oBACE/B,OAAA;IAAKwB,SAAS,EAAC,aAAa;IAAAE,QAAA,gBAC1B1B,OAAA;MAAIwB,SAAS,EAAC,aAAa;MAAAE,QAAA,EAAC;IAAG;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpC/B,OAAA;MAAMgE,QAAQ,EAAEP,YAAa;MAACjC,SAAS,EAAC,YAAY;MAACyC,YAAY,EAAC,KAAK;MAAAvC,QAAA,gBACrE1B,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAE,QAAA,gBAC9B1B,OAAA;UAAOkE,OAAO,EAAC,UAAU;UAAAxC,QAAA,EAAC;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC/B,OAAA;UACEI,EAAE,EAAC,UAAU;UACbqB,IAAI,EAAC,MAAM;UACX0C,KAAK,EAAE9D,QAAS;UAChB+D,QAAQ,EAAEV,CAAC,IAAIN,WAAW,CAACM,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;UAC3CF,YAAY,EAAC;QAAK;UAAArC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN/B,OAAA;QAAKwB,SAAS,EAAC,iBAAiB;QAAAE,QAAA,gBAC9B1B,OAAA;UAAOkE,OAAO,EAAC,UAAU;UAAAxC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtC/B,OAAA;UAAKwB,SAAS,EAAC,0BAA0B;UAAAE,QAAA,gBACvC1B,OAAA;YACEI,EAAE,EAAC,UAAU;YACbqB,IAAI,EAAE8B,YAAY,GAAG,MAAM,GAAG,UAAW;YACzCY,KAAK,EAAEd,QAAS;YAChBe,QAAQ,EAAEV,CAAC,IAAIJ,WAAW,CAACI,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;YAC3CF,YAAY,EAAC;UAAc;YAAArC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACF/B,OAAA;YACEyB,IAAI,EAAC,QAAQ;YACbD,SAAS,EAAC,qBAAqB;YAC/B8C,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAAC,CAACD,YAAY,CAAE;YAAA7B,QAAA,eAE9C1B,OAAA,CAAC8D,YAAY;cAAAlC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eACN/B,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACkB,GAAA,CAnEID,KAAK;EAAA,QACSjC,OAAO,EACHJ,UAAU;AAAA;AAAA4D,GAAA,GAF5BvB,KAAK;AAqEX,MAAMwB,YAAY,GAAGA,CAAC;EAAEC;AAAiC,CAAC,KAAK;EAAAC,GAAA;EAC7D,MAAM;IAAEnC,KAAK;IAAEJ,WAAW;IAAEwC;EAAS,CAAC,GAAG5D,OAAO,CAAC,CAAC;EAClD,MAAM;IAAEoC,SAAS;IAAEyB;EAAY,CAAC,GAAGjE,UAAU,CAAC,CAAC;EAC/C,MAAM,CAACkE,cAAc,EAAEC,iBAAiB,CAAC,GAAGtF,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACuF,MAAM,EAAEC,SAAS,CAAC,GAAGxF,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMiE,YAAY,GAAG,MAAOC,CAAkB,IAAK;IACjDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACkB,cAAc,IAAI,CAACE,MAAM,EAAE;MAC9B5B,SAAS,CAAC,gBAAgB,CAAC;MAC3B;IACF;IAEA,MAAM8B,MAAM,GAAG,MAAMN,QAAQ,CAACO,MAAM,CAACL,cAAc,CAAC,EAAEK,MAAM,CAACH,MAAM,CAAC,CAAC;IACrE,IAAI,CAACE,MAAM,CAACE,OAAO,EAAE;MACnBhC,SAAS,CAAC8B,MAAM,CAAC9D,OAAO,IAAI,gBAAgB,CAAC;MAC7C;IACF;IAEA,MAAMiE,MAAM,GAAG7C,KAAK,CAAC8C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClF,EAAE,KAAK8E,MAAM,CAACL,cAAc,CAAC,CAAC;IAC/DD,WAAW,CAAC,GAAG,CAAAQ,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE/E,QAAQ,KAAI,KAAK,OAAO0E,MAAM,aAAa,CAAC;IACnEC,SAAS,CAAC,EAAE,CAAC;IACbF,iBAAiB,CAAC,EAAE,CAAC;IACrBL,OAAO,CAAC,CAAC;EACX,CAAC;EAED,oBACEzE,OAAA;IAAKwB,SAAS,EAAC,eAAe;IAAC8C,OAAO,EAAEG,OAAQ;IAAA/C,QAAA,eAC9C1B,OAAA;MAAKwB,SAAS,EAAC,qBAAqB;MAAC8C,OAAO,EAAEZ,CAAC,IAAIA,CAAC,CAAC6B,eAAe,CAAC,CAAE;MAAA7D,QAAA,gBACrE1B,OAAA;QAAIwB,SAAS,EAAC,qBAAqB;QAAAE,QAAA,EAAC;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C/B,OAAA;QAAMgE,QAAQ,EAAEP,YAAa;QAAA/B,QAAA,gBAC3B1B,OAAA;UAAKwB,SAAS,EAAC,0BAA0B;UAAAE,QAAA,gBACvC1B,OAAA;YAAOkE,OAAO,EAAC,UAAU;YAAAxC,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxC/B,OAAA;YACEI,EAAE,EAAC,UAAU;YACb+D,KAAK,EAAEU,cAAe;YACtBT,QAAQ,EAAEV,CAAC,IAAIoB,iBAAiB,CAACpB,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;YACjD3C,SAAS,EAAC,sBAAsB;YAAAE,QAAA,gBAEhC1B,OAAA;cAAQmE,KAAK,EAAC,EAAE;cAAAzC,QAAA,EAAC;YAAK;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,EAC9BQ,KAAK,CACHiD,MAAM,CAAC3C,IAAI,IAAIA,IAAI,CAACzC,EAAE,MAAK+B,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAE/B,EAAE,EAAC,CAC3CwC,GAAG,CAACC,IAAI,iBACP7C,OAAA;cAAsBmE,KAAK,EAAEtB,IAAI,CAACzC,EAAG;cAAAsB,QAAA,EAClCmB,IAAI,CAACxC;YAAQ,GADHwC,IAAI,CAACzC,EAAE;cAAAwB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEZ,CACT,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eACN/B,OAAA;UAAKwB,SAAS,EAAC,0BAA0B;UAAAE,QAAA,gBACvC1B,OAAA;YAAOkE,OAAO,EAAC,QAAQ;YAAAxC,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACtC/B,OAAA;YACEI,EAAE,EAAC,QAAQ;YACXqB,IAAI,EAAC,QAAQ;YACb0C,KAAK,EAAEY,MAAO;YACdX,QAAQ,EAAEV,CAAC,IAAIsB,SAAS,CAACtB,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;YACzCsB,GAAG,EAAC,GAAG;YACPjE,SAAS,EAAC;UAAqB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN/B,OAAA;UAAKwB,SAAS,EAAC,4BAA4B;UAAAE,QAAA,gBACzC1B,OAAA;YAAQyB,IAAI,EAAC,QAAQ;YAACD,SAAS,EAAC,sBAAsB;YAAAE,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClE/B,OAAA;YAAQyB,IAAI,EAAC,QAAQ;YAAC6C,OAAO,EAAEG,OAAQ;YAACjD,SAAS,EAAC,sBAAsB;YAAAE,QAAA,EAAC;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjF,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;;AAED;AAAA2C,GAAA,CAtEMF,YAAY;EAAA,QACyBzD,OAAO,EACbJ,UAAU;AAAA;AAAA+E,GAAA,GAFzClB,YAAY;AAuElB,MAAMmB,eAAe,GAAGA,CAAC;EAAEjE;AAAwC,CAAC,KAAK;EAAAkE,GAAA;EACvE,MAAM,CAACzE,OAAO,EAAE0E,UAAU,CAAC,GAAGrG,QAAQ,CAAqD,IAAI,CAAC;EAEhG,MAAM2D,SAAS,GAAIxB,IAAY,IAAK;IAClCkE,UAAU,CAAC;MAAElE,IAAI;MAAEF,IAAI,EAAE;IAAQ,CAAC,CAAC;IACnCH,UAAU,CAAC,MAAMuE,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EAED,MAAMjB,WAAW,GAAIjD,IAAY,IAAK;IACpCkE,UAAU,CAAC;MAAElE,IAAI;MAAEF,IAAI,EAAE;IAAU,CAAC,CAAC;IACrCH,UAAU,CAAC,MAAMuE,UAAU,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;EAC1C,CAAC;EAED,MAAMzE,YAAY,GAAGA,CAAA,KAAMyE,UAAU,CAAC,IAAI,CAAC;EAE3C,oBACE7F,OAAA,CAACS,cAAc,CAACqF,QAAQ;IAAC3B,KAAK,EAAE;MAAEhD,OAAO;MAAEgC,SAAS;MAAEyB,WAAW;MAAExD;IAAa,CAAE;IAAAM,QAAA,EAC/EA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE9B,CAAC;;AAED;AACA;AACA;AACA;AACA;AAJA6D,GAAA,CAtBMD,eAAe;AAAAI,GAAA,GAAfJ,eAAe;AA2BrB,MAAMK,YAAY,GAAGA,CAAC;EAAEtE;AAAwC,CAAC,KAAK;EAAAuE,GAAA;EACpE,MAAM,CAAC9D,WAAW,EAAE+D,cAAc,CAAC,GAAG1G,QAAQ,CAAc,IAAI,CAAC;EACjE,MAAM,CAAC+C,KAAK,EAAE4D,QAAQ,CAAC,GAAG3G,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM;IAAE2D;EAAU,CAAC,GAAGxC,UAAU,CAAC,CAAC;;EAElC;AACF;AACA;AACA;AACA;EACE,MAAMuC,KAAK,GAAIL,IAAU,IAAK;IAC5B,MAAMuD,KAAK,GAAG7D,KAAK,CAAC8C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClF,EAAE,KAAKyC,IAAI,CAACzC,EAAE,CAAC;IAC/C,IAAIgG,KAAK,EAAE;MACTF,cAAc,CAACrD,IAAI,CAAC;IACtB,CAAC,MAAM;MACLsD,QAAQ,CAACE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAExD,IAAI,CAAC,CAAC;MACjCqD,cAAc,CAACrD,IAAI,CAAC;IACtB;EACF,CAAC;EAED,MAAMyD,MAAM,GAAGA,CAAA,KAAMJ,cAAc,CAAC,IAAI,CAAC;;EAEzC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACE,MAAMvB,QAAQ,GAAG,MAAAA,CAAO4B,QAAgB,EAAExB,MAAc,KAAyC;IAC/F,IAAI,CAAC5C,WAAW,EAAE;MAChB,OAAO;QAAEgD,OAAO,EAAE,KAAK;QAAEhE,OAAO,EAAE;MAAc,CAAC;IACnD;IAEA,MAAMiE,MAAM,GAAG7C,KAAK,CAAC8C,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClF,EAAE,KAAKmG,QAAQ,CAAC;IACjD,IAAI,CAACnB,MAAM,EAAE;MACX,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEhE,OAAO,EAAE;MAAoB,CAAC;IACzD;IAEA,IAAI4D,MAAM,IAAI,CAAC,EAAE;MACf,OAAO;QAAEI,OAAO,EAAE,KAAK;QAAEhE,OAAO,EAAE;MAAqB,CAAC;IAC1D;IAEA,IAAIgB,WAAW,CAAC7B,SAAS,GAAGyE,MAAM,EAAE;MAClC,OAAO;QAAEI,OAAO,EAAE,KAAK;QAAEhE,OAAO,EAAE;MAAiB,CAAC;IACtD;;IAEA;IACA,MAAMqF,YAAY,GAAGjE,KAAK,CAACK,GAAG,CAACC,IAAI,IAAI;MACrC,IAAIA,IAAI,CAACzC,EAAE,KAAK+B,WAAW,CAAC/B,EAAE,EAAE,OAAO;QAAE,GAAGyC,IAAI;QAAEvC,SAAS,EAAEuC,IAAI,CAACvC,SAAS,GAAGyE;MAAO,CAAC;MACtF,IAAIlC,IAAI,CAACzC,EAAE,KAAKmG,QAAQ,EAAE,OAAO;QAAE,GAAG1D,IAAI;QAAEvC,SAAS,EAAEuC,IAAI,CAACvC,SAAS,GAAGyE;MAAO,CAAC;MAChF,OAAOlC,IAAI;IACb,CAAC,CAAC;IAEFsD,QAAQ,CAACK,YAAY,CAAC;IACtB,MAAMC,kBAAkB,GAAGD,YAAY,CAACnB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClF,EAAE,KAAK+B,WAAW,CAAC/B,EAAE,CAAE;IAC3E8F,cAAc,CAACO,kBAAkB,CAAC;IAElC,OAAO;MACLtB,OAAO,EAAE,IAAI;MACbuB,IAAI,EAAE;QACJjF,IAAI,EAAE,eAAe;QACrBiF,IAAI,EAAE;UACJC,QAAQ,EAAEF,kBAAkB;UAC5BrB,MAAM,EAAEoB,YAAY,CAACnB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAClF,EAAE,KAAKmG,QAAQ,CAAE;UAClDxB;QACF;MACF;IACF,CAAC;EACH,CAAC;EAED,oBACE/E,OAAA,CAACU,WAAW,CAACoF,QAAQ;IAAC3B,KAAK,EAAE;MAAEhC,WAAW;MAAEI,KAAK;MAAEW,KAAK;MAAEoD,MAAM;MAAE3B;IAAS,CAAE;IAAAjD,QAAA,EAC1EA;EAAQ;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;;AAED;AAAAkE,GAAA,CAvFMD,YAAY;EAAA,QAGMrF,UAAU;AAAA;AAAAiG,GAAA,GAH5BZ,YAAY;AAwFlB,MAAMa,UAAU,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACvB,MAAM;IAAE3E;EAAY,CAAC,GAAGpB,OAAO,CAAC,CAAC;EACjC,MAAM,CAACgG,YAAY,EAAEC,eAAe,CAAC,GAAGxH,QAAQ,CAAC,KAAK,CAAC;EAEvD,oBACEQ,OAAA;IAAKwB,SAAS,EAAC,KAAK;IAAAE,QAAA,gBAClB1B,OAAA,CAACiB,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACb,CAACI,WAAW,gBACXnC,OAAA,CAACgD,KAAK;MAAApB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAET/B,OAAA,CAAAE,SAAA;MAAAwB,QAAA,gBACE1B,OAAA;QAAIwB,SAAS,EAAC,WAAW;QAAAE,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnC/B,OAAA;QAAKwB,SAAS,EAAC,cAAc;QAAAE,QAAA,eAC3B1B,OAAA,CAACiC,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eACN/B,OAAA,CAACqC,YAAY;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChB/B,OAAA;QAAKwB,SAAS,EAAC,gBAAgB;QAAAE,QAAA,eAC7B1B,OAAA;UAAQwB,SAAS,EAAC,mBAAmB;UAAC8C,OAAO,EAAEA,CAAA,KAAM0C,eAAe,CAAC,IAAI,CAAE;UAAAtF,QAAA,EAAC;QAE5E;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,EACLgF,YAAY,iBAAI/G,OAAA,CAACwE,YAAY;QAACC,OAAO,EAAEA,CAAA,KAAMuC,eAAe,CAAC,KAAK;MAAE;QAAApF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACxE,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAA+E,GAAA,CA5BMD,UAAU;EAAA,QACU9F,OAAO;AAAA;AAAAkG,GAAA,GAD3BJ,UAAU;AA6BhB,MAAMK,GAAG,GAAGA,CAAA,kBACVlH,OAAA,CAAC2F,eAAe;EAAAjE,QAAA,eACd1B,OAAA,CAACgG,YAAY;IAAAtE,QAAA,eACX1B,OAAA,CAAC6G,UAAU;MAAAjF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACA,CAClB;AAACoF,GAAA,GANID,GAAG;AAQT,eAAeA,GAAG;AAAC,IAAAlF,EAAA,EAAAI,GAAA,EAAAW,GAAA,EAAAwB,GAAA,EAAAmB,GAAA,EAAAK,GAAA,EAAAa,GAAA,EAAAK,GAAA,EAAAE,GAAA;AAAAC,YAAA,CAAApF,EAAA;AAAAoF,YAAA,CAAAhF,GAAA;AAAAgF,YAAA,CAAArE,GAAA;AAAAqE,YAAA,CAAA7C,GAAA;AAAA6C,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAArB,GAAA;AAAAqB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAH,GAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}